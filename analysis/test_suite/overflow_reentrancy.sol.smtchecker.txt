Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> test_suite/overflow_reentrancy.sol

Warning: Source file does not specify required compiler version! Consider adding "pragma solidity ^0.8.17;"
--> test_suite/overflow_reentrancy.sol

Warning: CHC: Assertion violation happens here.
Counterexample:
x = 10, d = 0

Transaction trace:
C.constructor()
State: x = 0, d = 0
C.f()
State: x = 1, d = 0
C.f()
State: x = 2, d = 0
C.f()
State: x = 3, d = 0
C.f()
State: x = 4, d = 0
C.f()
State: x = 5, d = 0
C.g()
    d.d() -- untrusted external call, synthesized as:
        C.f() -- reentrant call
        C.f() -- reentrant call
State: x = 7, d = 0
C.g()
    d.d() -- untrusted external call, synthesized as:
        C.f() -- reentrant call
        C.f() -- reentrant call
State: x = 9, d = 0
C.g()
    d.d() -- untrusted external call, synthesized as:
        C.f() -- reentrant call
  --> test_suite/overflow_reentrancy.sol:14:3:
   |
14 | 		assert(x < 10);
   | 		^^^^^^^^^^^^^^

